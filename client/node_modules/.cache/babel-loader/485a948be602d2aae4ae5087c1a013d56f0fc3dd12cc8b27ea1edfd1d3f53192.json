{"ast":null,"code":"// import axios from 'axios';\n/* \r\nAdd this line back to package.json if dynamic APIs will be used again in the future\r\n\"proxy\": \"https://localhost:5000\",\r\n*/\n\nexport default async function getSpotifyData(year) {\n  try {\n    /*  Benched for now: issues with server config in production\r\n    const response = await fetch(`https://localhost:5000/stfyat?year=${year}`)\r\n    if (!response.ok) {\r\n    \tthrow new Error('Failed to fetch');\r\n    }\r\n    \t\tconst playlistResponse = await response.json();\r\n    console.log(playlistResponse); */\n\n    // Read one of the local files\n    const response = await import(`./json/ManieMusicale${year}.json`);\n    return await response;\n  } catch (error) {\n    console.error(error);\n  }\n}","map":{"version":3,"names":["getSpotifyData","year","response","error","console"],"sources":["D:/Personal/School/Projects/guess_who_react/client/src/services/Spotify.js"],"sourcesContent":["// import axios from 'axios';\r\n/* \r\nAdd this line back to package.json if dynamic APIs will be used again in the future\r\n\"proxy\": \"https://localhost:5000\",\r\n*/\r\n\r\nexport default async function getSpotifyData(year) {\r\n\ttry {\r\n\t\t/*  Benched for now: issues with server config in production\r\n\t\tconst response = await fetch(`https://localhost:5000/stfyat?year=${year}`)\r\n\t\tif (!response.ok) {\r\n\t\t\tthrow new Error('Failed to fetch');\r\n\t\t}\r\n\r\n\t\tconst playlistResponse = await response.json();\r\n\t\tconsole.log(playlistResponse); */\r\n\r\n\t\t// Read one of the local files\r\n\t\tconst response = await import(`./json/ManieMusicale${year}.json`)\r\n\t\treturn await response\r\n\t}\r\n\tcatch (error) {\r\n\t\tconsole.error(error);\r\n\t}\r\n}"],"mappings":"AAAA;AACA;AACA;AACA;AACA;;AAEA,eAAe,eAAeA,cAAcA,CAACC,IAAI,EAAE;EAClD,IAAI;IACH;AACF;AACA;AACA;AACA;AACA;AACA;;IAGE;IACA,MAAMC,QAAQ,GAAG,MAAM,MAAM,CAAE,uBAAsBD,IAAK,OAAM,CAAC;IACjE,OAAO,MAAMC,QAAQ;EACtB,CAAC,CACD,OAAOC,KAAK,EAAE;IACbC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;EACrB;AACD","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}