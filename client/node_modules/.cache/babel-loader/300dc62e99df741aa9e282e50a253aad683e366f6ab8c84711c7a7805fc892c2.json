{"ast":null,"code":"// import axios from 'axios';\n/* \r\nAdd this line back to package.json if dynamic APIs will be used again in the future\r\n\"proxy\": \"https://localhost:5000\",\r\n*/export default async function getSpotifyData(year){try{/*  Benched for now: issues with server config in production\r\n\t\tconst response = await fetch(`https://localhost:5000/stfyat?year=${year}`)\r\n\t\tif (!response.ok) {\r\n\t\t\tthrow new Error('Failed to fetch');\r\n\t\t}\r\n\r\n\t\tconst playlistResponse = await response.json();\r\n\t\tconsole.log(playlistResponse); */ // Read one of the local files\nconst response=await import(\"./json/ManieMusicale\".concat(year,\".json\"));return await response;}catch(error){console.error(error);}}","map":{"version":3,"names":["getSpotifyData","year","response","concat","error","console"],"sources":["D:/Personal/School/Projects/Portfolio/client/src/services/Spotify.js"],"sourcesContent":["// import axios from 'axios';\r\n/* \r\nAdd this line back to package.json if dynamic APIs will be used again in the future\r\n\"proxy\": \"https://localhost:5000\",\r\n*/\r\n\r\nexport default async function getSpotifyData(year) {\r\n\ttry {\r\n\t\t/*  Benched for now: issues with server config in production\r\n\t\tconst response = await fetch(`https://localhost:5000/stfyat?year=${year}`)\r\n\t\tif (!response.ok) {\r\n\t\t\tthrow new Error('Failed to fetch');\r\n\t\t}\r\n\r\n\t\tconst playlistResponse = await response.json();\r\n\t\tconsole.log(playlistResponse); */\r\n\r\n\t\t// Read one of the local files\r\n\t\tconst response = await import(`./json/ManieMusicale${year}.json`)\r\n\t\treturn await response\r\n\t}\r\n\tcatch (error) {\r\n\t\tconsole.error(error);\r\n\t}\r\n}"],"mappings":"AAAA;AACA;AACA;AACA;AACA,EAEA,cAAe,eAAe,CAAAA,cAAcA,CAACC,IAAI,CAAE,CAClD,GAAI,CACH;AACF;AACA;AACA;AACA;AACA;AACA;AACA,mCAPE,CASA;AACA,KAAM,CAAAC,QAAQ,CAAG,KAAM,OAAM,wBAAAC,MAAA,CAAwBF,IAAI,SAAO,CAAC,CACjE,MAAO,MAAM,CAAAC,QAAQ,CACtB,CACA,MAAOE,KAAK,CAAE,CACbC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC,CACrB,CACD","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}