{"ast":null,"code":"import'./styles/index.css';import React,{useEffect,useState}from'react';import ReactDOM from'react-dom/client';import{BrowserRouter,Routes,Route}from\"react-router-dom\";// Nav items\nimport Navigation from'./pages/Navigation.js';import NotFound from'./pages/NotFound.js';import Demos from'./pages/Demos.js';import Game from'./pages/Game.js';import Portfolio from'./pages/Portfolio.js';import reportWebVitals from'./reportWebVitals';import Axios from'axios';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";export default function App(){// const [data, setData] = useState(null)\n// useEffect(() => {\n//   async function fetchData() {\n//     try {\n//       const response = await fetch('/stfyat');\n//       if (!response.ok) {\n//         throw new Error('Failed to fetch');\n//       }\n//       const token = await response.json();\n//       setData(token)\n//     } \n//     catch (error) {\n//       console.error(error);\n//     }\n//   }\n//   fetchData();\n// }, [])\n// useEffect(() => {\n//   console.log(data)\n// }, [data])\nreturn/*#__PURE__*/_jsxs(BrowserRouter,{children:[/*#__PURE__*/_jsx(Navigation,{}),/*#__PURE__*/_jsx(\"div\",{className:\"scroll-smooth\",children:/*#__PURE__*/_jsxs(Routes,{children:[/*#__PURE__*/_jsx(Route,{path:\"/\",element:/*#__PURE__*/_jsx(Portfolio,{})}),/*#__PURE__*/_jsx(Route,{path:\"/demos\",element:/*#__PURE__*/_jsx(Demos,{})}),/*#__PURE__*/_jsx(Route,{path:\"/game\",element:/*#__PURE__*/_jsx(Game,{})}),/*#__PURE__*/_jsx(Route,{path:\"*\",element:/*#__PURE__*/_jsx(NotFound,{})})]})})]});}const root=ReactDOM.createRoot(document.getElementById('root'));root.render(/*#__PURE__*/_jsx(React.StrictMode,{children:/*#__PURE__*/_jsx(App,{})}));// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();","map":{"version":3,"names":["React","useEffect","useState","ReactDOM","BrowserRouter","Routes","Route","Navigation","NotFound","Demos","Game","Portfolio","reportWebVitals","Axios","jsx","_jsx","jsxs","_jsxs","App","children","className","path","element","root","createRoot","document","getElementById","render","StrictMode"],"sources":["D:/Personal/School/Projects/guess_who_react/client/src/index.js"],"sourcesContent":["import './styles/index.css';\nimport React, { useEffect, useState } from 'react';\nimport ReactDOM from 'react-dom/client';\nimport { BrowserRouter, Routes, Route } from \"react-router-dom\";\n\n// Nav items\nimport Navigation from './pages/Navigation.js';\nimport NotFound from './pages/NotFound.js';\nimport Demos from './pages/Demos.js';\nimport Game from './pages/Game.js';\nimport Portfolio from './pages/Portfolio.js';\nimport reportWebVitals from './reportWebVitals';\nimport Axios from 'axios';\n\nexport default function App() {\n  // const [data, setData] = useState(null)\n\n  // useEffect(() => {\n  //   async function fetchData() {\n  //     try {\n  //       const response = await fetch('/stfyat');\n\n  //       if (!response.ok) {\n  //         throw new Error('Failed to fetch');\n  //       }\n        \n  //       const token = await response.json();\n  //       setData(token)\n  //     } \n  //     catch (error) {\n  //       console.error(error);\n  //     }\n  //   }\n  //   fetchData();\n  // }, [])\n\n  // useEffect(() => {\n  //   console.log(data)\n  // }, [data])\n\n  return (\n    <BrowserRouter>\n    <Navigation />\n    <div className=\"scroll-smooth\">\n      <Routes>\n        <Route path=\"/\" element={<Portfolio />} />\n        <Route path=\"/demos\" element={<Demos />} />\n        <Route path=\"/game\" element={<Game />} />\n        <Route path=\"*\" element={<NotFound />} />\n      </Routes>\n    </div>\n    </BrowserRouter>\n  );\n}\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\n\nroot.render(\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  );\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"mappings":"AAAA,MAAO,oBAAoB,CAC3B,MAAO,CAAAA,KAAK,EAAIC,SAAS,CAAEC,QAAQ,KAAQ,OAAO,CAClD,MAAO,CAAAC,QAAQ,KAAM,kBAAkB,CACvC,OAASC,aAAa,CAAEC,MAAM,CAAEC,KAAK,KAAQ,kBAAkB,CAE/D;AACA,MAAO,CAAAC,UAAU,KAAM,uBAAuB,CAC9C,MAAO,CAAAC,QAAQ,KAAM,qBAAqB,CAC1C,MAAO,CAAAC,KAAK,KAAM,kBAAkB,CACpC,MAAO,CAAAC,IAAI,KAAM,iBAAiB,CAClC,MAAO,CAAAC,SAAS,KAAM,sBAAsB,CAC5C,MAAO,CAAAC,eAAe,KAAM,mBAAmB,CAC/C,MAAO,CAAAC,KAAK,KAAM,OAAO,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAE1B,cAAe,SAAS,CAAAC,GAAGA,CAAA,CAAG,CAC5B;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA,mBACED,KAAA,CAACb,aAAa,EAAAe,QAAA,eACdJ,IAAA,CAACR,UAAU,GAAE,CAAC,cACdQ,IAAA,QAAKK,SAAS,CAAC,eAAe,CAAAD,QAAA,cAC5BF,KAAA,CAACZ,MAAM,EAAAc,QAAA,eACLJ,IAAA,CAACT,KAAK,EAACe,IAAI,CAAC,GAAG,CAACC,OAAO,cAAEP,IAAA,CAACJ,SAAS,GAAE,CAAE,CAAE,CAAC,cAC1CI,IAAA,CAACT,KAAK,EAACe,IAAI,CAAC,QAAQ,CAACC,OAAO,cAAEP,IAAA,CAACN,KAAK,GAAE,CAAE,CAAE,CAAC,cAC3CM,IAAA,CAACT,KAAK,EAACe,IAAI,CAAC,OAAO,CAACC,OAAO,cAAEP,IAAA,CAACL,IAAI,GAAE,CAAE,CAAE,CAAC,cACzCK,IAAA,CAACT,KAAK,EAACe,IAAI,CAAC,GAAG,CAACC,OAAO,cAAEP,IAAA,CAACP,QAAQ,GAAE,CAAE,CAAE,CAAC,EACnC,CAAC,CACN,CAAC,EACS,CAAC,CAEpB,CAEA,KAAM,CAAAe,IAAI,CAAGpB,QAAQ,CAACqB,UAAU,CAACC,QAAQ,CAACC,cAAc,CAAC,MAAM,CAAC,CAAC,CAEjEH,IAAI,CAACI,MAAM,cACPZ,IAAA,CAACf,KAAK,CAAC4B,UAAU,EAAAT,QAAA,cACfJ,IAAA,CAACG,GAAG,GAAE,CAAC,CACS,CACpB,CAAC,CACH;AACA;AACA;AACAN,eAAe,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}